// Code generated by MockGen. DO NOT EDIT.
// Source: storage.go

// Package mock_storage is a generated GoMock package.
package storage

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// GetObservationTime mocks base method.
func (m *MockStorage) GetObservationTime(ctx context.Context, model_id int) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObservationTime", ctx, model_id)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObservationTime indicates an expected call of GetObservationTime.
func (mr *MockStorageMockRecorder) GetObservationTime(ctx, model_id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObservationTime", reflect.TypeOf((*MockStorage)(nil).GetObservationTime), ctx, model_id)
}

// GetReport mocks base method.
func (m *MockStorage) GetReport(ctx context.Context, report_id int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReport", ctx, report_id)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReport indicates an expected call of GetReport.
func (mr *MockStorageMockRecorder) GetReport(ctx, report_id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReport", reflect.TypeOf((*MockStorage)(nil).GetReport), ctx, report_id)
}

// GracefulStopDB mocks base method.
func (m *MockStorage) GracefulStopDB() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GracefulStopDB")
}

// GracefulStopDB indicates an expected call of GracefulStopDB.
func (mr *MockStorageMockRecorder) GracefulStopDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GracefulStopDB", reflect.TypeOf((*MockStorage)(nil).GracefulStopDB))
}

// PostReport mocks base method.
func (m *MockStorage) PostReport(ctx context.Context, report_info string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostReport", ctx, report_info)
	ret0, _ := ret[0].(error)
	return ret0
}

// PostReport indicates an expected call of PostReport.
func (mr *MockStorageMockRecorder) PostReport(ctx, report_info interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostReport", reflect.TypeOf((*MockStorage)(nil).PostReport), ctx, report_info)
}
